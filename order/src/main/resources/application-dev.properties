eureka.client.service-url.defaultZone=http://localhost:8761/eureka/,http://localhost:8762/eureka/,http://localhost:8763/eureka/
eureka.instance.hostname=127.0.0.1
spring.application.name=order
server.port=9001

spring.security.user.name=
spring.security.user.password=

#热部署生效
spring.devtools.restart.enabled: true
#设置重启的目录
#spring.devtools.restart.additional-paths: src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude: WEB-INF/**


# Druid WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*

# Druid StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=root
spring.datasource.druid.stat-view-servlet.login-password=
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=

spring.datasource.druid.url=
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.username=
spring.datasource.druid.password=



#连接池的配置信息
#初始化连接
spring.datasource.druid.initial-size=100
#最小空闲连接，连接池容许保持空闲状态的最小连接，低于这个数量将创建新的连接，如果为0则不创建
spring.datasource.druid.min-idle=100
#最大活动连接，连接池在同一时间能够分配的最大活动连接的数量
spring.datasource.druid.max-active=1000
#最大等待时间，当没有可用连接时，超过时间则抛出异常
spring.datasource.druid.max-wait=60000
#在空闲连接回收器线程运行期间休眠的时间值
spring.datasource.druid.time-between-eviction-runs-millis=60000
#连接在池中保持空闲而不被空闲连接回收器线程回收的最小时间值
spring.datasource.druid.min-evictable-idle-time-millis=300000
#SQL查询，用来验证从连接池取出的连接，在连接返回调用者之前，如果指定，则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收器进行检验，如果检验失败，则连接将被池中去除
#设置为true后如果要生效， validation-query参数必须要设置非空字符串
spring.datasource.druid.test-while-idle=true
#指明是否在池中取出连接前进行验证，如果检验失败，则从池中去除连接并且取出另一个
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-borrow=true
#指明是否归还到池中前进行检验
#设置为true后如果要生效，validation-query参数必须要设置非空字符串
spring.datasource.druid.test-on-return=false
#开启池中的prepared statement池功能
spring.datasource.druid.pool-prepared-statements=true
#prepared statement池能够同时分配的打开的statements的最大数量
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置监控统计拦截的filters
spring.datasource.druid.filter.commons-log.connection-logger-name=stat,wall,log4j
#通过connection-properties属性来打开mergeSql功能，慢sql记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
#是否自动回收超时连接
spring.datasource.druid.remove-abandoned=true
#泄漏的连接可以被删除的超时值，单位为毫秒
spring.datasource.druid.remove-abandoned-timeout-millis=180000
#回收超时连接是否要打印stack traces日志
spring.datasource.druid.log-abandoned=true
